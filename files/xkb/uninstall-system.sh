#!/bin/sh
set -eu

xkb_dir_from=$(dirname "$0")
xkb_dir_to="/usr/share/X11/xkb"
layout=""
description=""
mods=""

OPTIND=1

while getopts "i:o:l:d:m:" opt; do
  case "$opt" in
    i) xkb_dir_from="$OPTARG";;
    o) xkb_dir_to="$OPTARG";;
    l) layout="$OPTARG";;
    d) description="$OPTARG";;
    m) mods="$OPTARG";;
    *) exit 1;;
  esac
done

if [ -z "$layout" ]; then
  echo "Empty layout"
  exit 2
fi

confirm () {
  # call with a prompt string or use a default
  printf "%s [y/N] " "${1:-Are you sure?}"
  read -r response
  case "${response:-${2:-}}" in
    [yY][eE][sS]|[yY]) true;;
    [nN][oO]|[nN]) false;;
    *) confirm "${1:-}" "${2:-}";;
  esac
}

remove_file () {
  file=$1

  if [ -f "$file" ] && { grep -qx "// Generated by KLFC .*" "$file" || confirm "$file is not generated by KLFC. Remove?"; }; then
    rm "$file"
  fi
}

remove_line () {
  file=$1
  line=$2

  { grep -Fxv "$line" "$file" || [ "$?" = 1 ]; } > "$file.tmp"
  mv "$file.tmp" "$file"
}

remove_type () {
  file=$1
  layout=$2

  for group in 0 1 2 3 4; do
    if [ "$group" -eq 0 ]; then
      line="  $layout	=	+$layout"
    else
      line="  $layout	=	+$layout:$group"
    fi

    remove_line "$file" "$line"
  done
}

remove_models () {
  file=$1
  mods=$2
  layout=$3

  for mod in $mods; do
    line="  mod_$mod	=	+$layout($mod)"

    remove_line "$file" "$line"
  done
}

remove_description () {
  file=$1
  layout=$2
  description=$3

  line="  $layout	$description"
  remove_line "$file" "$line"
}

if [ "$(id -u)" -ne 0 ] && command -v sudo > /dev/null 2>&1; then
  sudo klfc_child=true "$0" "$@"
else
  remove_file "$xkb_dir_to/symbols/$layout"
  remove_file "$xkb_dir_to/types/$layout"
  remove_file "$xkb_dir_to/keycodes/$layout"

  remove_type "$xkb_dir_to/rules/base" "$layout"
  remove_type "$xkb_dir_to/rules/evdev" "$layout"

  remove_models "$xkb_dir_to/rules/base" "$mods" "$layout"
  remove_models "$xkb_dir_to/rules/evdev" "$mods" "$layout"

  remove_description "$xkb_dir_to/rules/base.lst" "$layout" "$description"
  remove_description "$xkb_dir_to/rules/evdev.lst" "$layout" "$description"

  "$xkb_dir_from/scripts/remove-layout-from-xml.py" "$xkb_dir_to/rules/base.xml" "$layout"
  "$xkb_dir_from/scripts/remove-layout-from-xml.py" "$xkb_dir_to/rules/evdev.xml" "$layout"
fi

if [ "$(id -u)" -eq 0 ]; then
  if [ "${klfc_child-false}" = false ] && [ "$(cat "$xkb_dir_from/XCompose" | wc -l)" -gt 2 ]; then
    echo "Run uninstall-xcompose.sh as user to uninstall the XCompose file."
  fi
else
  "$xkb_dir_from/uninstall-xcompose.sh" "$layout"
fi
