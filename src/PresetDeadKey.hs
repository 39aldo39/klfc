{-# LANGUAGE UnicodeSyntax, NoImplicitPrelude #-}

module PresetDeadKey
    ( PresetDeadKey(..)
    , presetDeadKeyToDeadKey'
    ) where

import BasePrelude
import Prelude.Unicode
import Data.Monoid.Unicode ((⊕))
import Util (HumanReadable(..))

import Control.Monad.Writer (runWriter)
import Data.Map (Map)
import qualified Data.Map as M

import Layout.DeadKey

data PresetDeadKey
    = Grave
    | Acute
    | Circumflex
    | Tilde
    | Macron
    | Breve
    | AboveDot
    | Diaeresis
    | AboveRing
    | DoubleAcute
    | Caron
    | Cedilla
    | Ogonek
    | Iota
    | BelowDot
    | Hook
    | Horn
    | Stroke
    | AboveComma
    | AboveReversedComma
    | DoubleGrave
    | BelowRing
    | BelowMacron
    | BelowCircumflex
    | BelowTilde
    | BelowBreve
    | BelowDiaeresis
    | InvertedBreve
    | BelowComma
    | Currency
    | Greek
    deriving (Eq, Ord, Show, Read, Enum, Bounded)

presetDeadKeyAndString ∷ [(PresetDeadKey, String)]
presetDeadKeyAndString =
    [ (Grave, "grave")
    , (Acute, "acute")
    , (Circumflex, "circumflex")
    , (Tilde, "tilde")
    , (Macron, "macron")
    , (Breve, "breve")
    , (AboveDot, "abovedot")
    , (Diaeresis, "diaeresis")
    , (AboveRing, "abovering")
    , (DoubleAcute, "doubleacute")
    , (Caron, "caron")
    , (Cedilla, "cedilla")
    , (Ogonek, "ogonek")
    , (Iota, "iota")
    , (BelowDot, "belowdot")
    , (Hook, "hook")
    , (Horn, "horn")
    , (Stroke, "stroke")
    , (AboveComma, "abovecomma")
    , (AboveReversedComma, "abovereversedcomma")
    , (DoubleGrave, "doublegrave")
    , (BelowRing, "belowring")
    , (BelowMacron, "belowmacron")
    , (BelowCircumflex, "belowcircumflex")
    , (BelowTilde, "belowtilde")
    , (BelowBreve, "belowbreve")
    , (BelowDiaeresis, "belowdiaeresis")
    , (InvertedBreve, "invertedbreve")
    , (BelowComma, "belowcomma")
    , (Currency, "currency")
    , (Greek, "greek")
    ]

instance HumanReadable PresetDeadKey where
    typeName _ = "preset dead key"
    stringList = presetDeadKeyAndString

presetDeadKeys ∷ Map PresetDeadKey (DeadKey' Char PresetDeadKey)
presetDeadKeys = M.fromList
    [ (Grave, grave)
    , (Acute, acute)
    , (Circumflex, circumflex)
    , (Tilde, tilde)
    , (Macron, macron)
    , (Breve, breve)
    , (AboveDot, abovedot)
    , (Diaeresis, diaeresis)
    , (AboveRing, abovering)
    , (DoubleAcute, doubleacute)
    , (Caron, caron)
    , (Cedilla, cedilla)
    , (Ogonek, ogonek)
    , (Iota, iota)
    , (BelowDot, belowdot)
    , (Hook, hook)
    , (Horn, horn)
    , (Stroke, stroke)
    , (AboveComma, abovecomma)
    , (AboveReversedComma, abovereversedcomma)
    , (DoubleGrave, doublegrave)
    , (BelowRing, belowring)
    , (BelowMacron, belowmacron)
    , (BelowCircumflex, belowcircumflex)
    , (BelowTilde, belowtilde)
    , (BelowBreve, belowbreve)
    , (BelowDiaeresis, belowdiaeresis)
    , (InvertedBreve, invertedbreve)
    , (BelowComma, belowcomma)
    , (Currency, currency)
    , (Greek, greek)
    ]

presetDeadKeyToDeadKey' ∷ PresetDeadKey → DeadKey' Char PresetDeadKey
presetDeadKeyToDeadKey' presetDeadKey = fromMaybe e (M.lookup presetDeadKey presetDeadKeys)
  where e = error ("unknown " ⊕ show' presetDeadKey)

grave ∷ DeadKey' Char PresetDeadKey
grave = DeadKey "grave" (BaseChar '`') ∘ fst ∘ runWriter $ stringMapToActionMap "grave"
    [ (" ", "`")
    , ("A", "À")
    , ("a", "à")
    , ("E", "È")
    , ("e", "è")
    , ("I", "Ì")
    , ("i", "ì")
    , ("N", "Ǹ")
    , ("n", "ǹ")
    , ("O", "Ò")
    , ("o", "ò")
    , ("U", "Ù")
    , ("u", "ù")
    , ("W", "Ẁ")
    , ("w", "ẁ")
    , ("Y", "Ỳ")
    , ("y", "ỳ")
    ]
acute ∷ DeadKey' Char PresetDeadKey
acute = DeadKey "acute" (BaseChar '´') ∘ fst ∘ runWriter $ stringMapToActionMap "acute"
    [ (" ", "'")
    , ("A", "Á")
    , ("a", "á")
    , ("Æ", "Ǽ")
    , ("æ", "ǽ")
    , ("C", "Ć")
    , ("c", "ć")
    , ("E", "É")
    , ("e", "é")
    , ("G", "Ǵ")
    , ("g", "ǵ")
    , ("I", "Í")
    , ("i", "í")
    , ("K", "Ḱ")
    , ("k", "ḱ")
    , ("L", "Ĺ")
    , ("l", "ĺ")
    , ("M", "Ḿ")
    , ("m", "ḿ")
    , ("N", "Ń")
    , ("n", "ń")
    , ("O", "Ó")
    , ("o", "ó")
    , ("Ø", "Ǿ")
    , ("ø", "ǿ")
    , ("P", "Ṕ")
    , ("p", "ṕ")
    , ("R", "Ŕ")
    , ("r", "ŕ")
    , ("S", "Ś")
    , ("s", "ś")
    , ("U", "Ú")
    , ("u", "ú")
    , ("W", "Ẃ")
    , ("w", "ẃ")
    , ("Y", "Ý")
    , ("y", "ý")
    , ("Z", "Ź")
    , ("z", "ź")
    ]
circumflex ∷ DeadKey' Char PresetDeadKey
circumflex = DeadKey "circumflex" (BaseChar '^') ∘ fst ∘ runWriter $ stringMapToActionMap "circumflex"
    [ (" ", "^")
    , ("A", "Â")
    , ("a", "â")
    , ("C", "Ĉ")
    , ("c", "ĉ")
    , ("E", "Ê")
    , ("e", "ê")
    , ("G", "Ĝ")
    , ("g", "ĝ")
    , ("H", "Ĥ")
    , ("h", "ĥ")
    , ("I", "Î")
    , ("i", "î")
    , ("J", "Ĵ")
    , ("j", "ĵ")
    , ("O", "Ô")
    , ("o", "ô")
    , ("S", "Ŝ")
    , ("s", "ŝ")
    , ("U", "Û")
    , ("u", "û")
    , ("W", "Ŵ")
    , ("w", "ŵ")
    , ("Y", "Ŷ")
    , ("y", "ŷ")
    , ("Z", "Ẑ")
    , ("z", "ẑ")
    ]
tilde ∷ DeadKey' Char PresetDeadKey
tilde = DeadKey "tilde" (BaseChar '~') ∘ fst ∘ runWriter $ stringMapToActionMap "tilde"
    [ ("A", "Ã")
    , ("a", "ã")
    , ("E", "Ẽ")
    , ("e", "ẽ")
--    , ("G", "G̃")
--    , ("g", "g̃")
    , ("I", "Ĩ")
    , ("i", "ĩ")
    , ("N", "Ñ")
    , ("n", "ñ")
    , ("O", "Õ")
    , ("o", "õ")
--    , ("P", "P̃")
--    , ("p", "p̃")
    , ("U", "Ũ")
    , ("u", "ũ")
    , ("V", "Ṽ")
    , ("v", "ṽ")
    , ("Y", "Ỹ")
    , ("y", "ỹ")
    ]
macron ∷ DeadKey' Char PresetDeadKey
macron = DeadKey "macron" (BaseChar '¯') ∘ fst ∘ runWriter $ stringMapToActionMap "macron"
    [ ("A", "Ā")
    , ("a", "ā")
    , ("E", "Ē")
    , ("e", "ē")
    , ("G", "Ḡ")
    , ("g", "ḡ")
    , ("I", "Ī")
    , ("i", "ī")
    , ("O", "Ō")
    , ("o", "ō")
    , ("U", "Ū")
    , ("u", "ū")
    , ("Y", "Ȳ")
    , ("y", "ȳ")
    , ("Æ", "Ǣ")
    , ("æ", "ǣ")
    ]
breve ∷ DeadKey' Char PresetDeadKey
breve = DeadKey "breve" (BaseChar '˘') ∘ fst ∘ runWriter $ stringMapToActionMap "breve"
    [ ("A", "Ă")
    , ("a", "ă")
    , ("E", "Ĕ")
    , ("e", "ĕ")
    , ("G", "Ğ")
    , ("g", "ğ")
    , ("I", "Ĭ")
    , ("i", "ĭ")
    , ("O", "Ŏ")
    , ("o", "ŏ")
    , ("U", "Ŭ")
    , ("u", "ŭ")
    ]
abovedot ∷ DeadKey' Char PresetDeadKey
abovedot = DeadKey "abovedot" (BaseChar '˙') ∘ fst ∘ runWriter $ stringMapToActionMap "abovedot"
    [ ("A", "Ȧ")
    , ("a", "ȧ")
    , ("B", "Ḃ")
    , ("b", "ḃ")
    , ("C", "Ċ")
    , ("c", "ċ")
    , ("D", "Ḋ")
    , ("d", "ḋ")
    , ("E", "Ė")
    , ("e", "ė")
    , ("F", "Ḟ")
    , ("f", "ḟ")
    , ("G", "Ġ")
    , ("g", "ġ")
    , ("H", "Ḣ")
    , ("h", "ḣ")
    , ("I", "İ")
    , ("i", "ı")
    , ("M", "Ṁ")
    , ("m", "ṁ")
    , ("N", "Ṅ")
    , ("n", "ṅ")
    , ("O", "Ȯ")
    , ("o", "ȯ")
    , ("P", "Ṗ")
    , ("p", "ṗ")
    , ("R", "Ṙ")
    , ("r", "ṙ")
    , ("S", "Ṡ")
    , ("s", "ṡ")
    , ("T", "Ṫ")
    , ("t", "ṫ")
    , ("W", "Ẇ")
    , ("w", "ẇ")
    , ("X", "Ẋ")
    , ("x", "ẋ")
    , ("Y", "Ẏ")
    , ("y", "ẏ")
    , ("Z", "Ż")
    , ("z", "ż")
    ]
diaeresis ∷ DeadKey' Char PresetDeadKey
diaeresis = DeadKey "diaeresis" (BaseChar '¨') ∘ fst ∘ runWriter $ stringMapToActionMap "diaeresis"
    [ (" ", "\"")
    , ("A", "Ä")
    , ("a", "ä")
    , ("E", "Ë")
    , ("e", "ë")
    , ("H", "Ḧ")
    , ("h", "ḧ")
    , ("I", "Ï")
    , ("i", "ï")
    , ("O", "Ö")
    , ("o", "ö")
    , ("t", "ẗ")
    , ("U", "Ü")
    , ("u", "ü")
    , ("W", "Ẅ")
    , ("w", "ẅ")
    , ("X", "Ẍ")
    , ("x", "ẍ")
    , ("Y", "Ÿ")
    , ("y", "ÿ")
    ]
abovering ∷ DeadKey' Char PresetDeadKey
abovering = DeadKey "abovering" (BaseChar '˚') ∘ fst ∘ runWriter $ stringMapToActionMap "abovering"
    [ ("A", "Å")
    , ("a", "å")
    , ("U", "Ů")
    , ("u", "ů")
--    , ("W", "W̊")
    , ("w", "ẘ")
--    , ("Y", "Y̊")
    , ("y", "ẙ")
    ]
doubleacute ∷ DeadKey' Char PresetDeadKey
doubleacute = DeadKey "doubleacute" (BaseChar '˝') ∘ fst ∘ runWriter $ stringMapToActionMap "doubleacute"
    [ ("O", "Ő")
    , ("o", "ő")
    , ("U", "Ű")
    , ("u", "ű")
    ]
caron ∷ DeadKey' Char PresetDeadKey
caron = DeadKey "caron" (BaseChar 'ˇ') ∘ fst ∘ runWriter $ stringMapToActionMap "caron"
    [ ("A", "Ǎ")
    , ("a", "ǎ")
    , ("C", "Č")
    , ("c", "č")
    , ("D", "Ď")
    , ("d", "ď")
    , ("E", "Ě")
    , ("e", "ě")
    , ("G", "Ǧ")
    , ("g", "ǧ")
    , ("H", "Ȟ")
    , ("h", "ȟ")
    , ("I", "Ǐ")
    , ("i", "ǐ")
--    , ("J", "J̌")
    , ("j", "ǰ")
    , ("K", "Ǩ")
    , ("k", "ǩ")
    , ("L", "Ľ")
    , ("l", "ľ")
    , ("N", "Ň")
    , ("n", "ň")
    , ("O", "Ǒ")
    , ("o", "ǒ")
    , ("R", "Ř")
    , ("r", "ř")
    , ("S", "Š")
    , ("s", "š")
    , ("T", "Ť")
    , ("t", "ť")
    , ("U", "Ǔ")
    , ("u", "ǔ")
--    , ("X", "X̌")
--    , ("x", "x̌")
    , ("Z", "Ž")
    , ("z", "ž")
    , ("Ʒ", "Ǯ")
    , ("ʒ", "ǯ")
    ]
cedilla ∷ DeadKey' Char PresetDeadKey
cedilla = DeadKey "cedilla" (BaseChar '¸') ∘ fst ∘ runWriter $ stringMapToActionMap "cedilla"
    [ ("C", "Ç")
    , ("c", "ç")
    , ("D", "Ḑ")
    , ("d", "ḑ")
    , ("E", "Ȩ")
    , ("e", "ȩ")
    , ("G", "Ģ")
    , ("g", "ģ")
    , ("H", "Ḩ")
    , ("h", "ḩ")
    , ("K", "Ķ")
    , ("k", "ķ")
    , ("L", "Ļ")
    , ("l", "ļ")
    , ("N", "Ņ")
    , ("n", "ņ")
    , ("R", "Ŗ")
    , ("r", "ŗ")
    , ("S", "Ş")
    , ("s", "ş")
    , ("T", "Ţ")
    , ("t", "ţ")
--    , ("X", "X̧")
--    , ("x", "x̧")
    ]
ogonek ∷ DeadKey' Char PresetDeadKey
ogonek = DeadKey "ogonek" (BaseChar '˛') ∘ fst ∘ runWriter $ stringMapToActionMap "ogonek"
    [ ("A", "Ą")
    , ("a", "ą")
--    , ("Ä", "Ą̈")
--    , ("ä", "ą̈")
    , ("E", "Ę")
    , ("e", "ę")
    , ("I", "Į")
    , ("i", "į")
    , ("O", "Ǫ")
    , ("o", "ǫ")
--    , ("Ö", "Ǫ̈")
--    , ("ö", "ǫ̈")
    , ("U", "Ų")
    , ("u", "ų")
    ]
iota ∷ DeadKey' Char PresetDeadKey
iota = DeadKey "iota" (BaseChar 'ͺ') ∘ fst ∘ runWriter $ stringMapToActionMap "iota"
    [ ("Α", "ᾼ")
    , ("Ἀ", "ᾈ")
    , ("Ἁ", "ᾉ")
    , ("Ἂ", "ᾊ")
    , ("Ἃ", "ᾋ")
    , ("Ἄ", "ᾌ")
    , ("Ἅ", "ᾍ")
    , ("Ἆ", "ᾎ")
    , ("Ἇ", "ᾏ")
    , ("α", "ᾳ")
    , ("ἀ", "ᾀ")
    , ("ἁ", "ᾁ")
    , ("ἂ", "ᾂ")
    , ("ἃ", "ᾃ")
    , ("ἄ", "ᾄ")
    , ("ἅ", "ᾅ")
    , ("ἆ", "ᾆ")
    , ("ἇ", "ᾇ")
    , ("ὰ", "ᾲ")
    , ("ά", "ᾴ")
    , ("ᾶ", "ᾷ")
    , ("Η", "ῌ")
    , ("Ἠ", "ᾘ")
    , ("Ἡ", "ᾙ")
    , ("Ἢ", "ᾚ")
    , ("Ἣ", "ᾛ")
    , ("Ἤ", "ᾜ")
    , ("Ἥ", "ᾝ")
    , ("Ἦ", "ᾞ")
    , ("Ἧ", "ᾟ")
    , ("η", "ῃ")
    , ("ἠ", "ᾐ")
    , ("ἡ", "ᾑ")
    , ("ἢ", "ᾒ")
    , ("ἣ", "ᾓ")
    , ("ἤ", "ᾔ")
    , ("ἥ", "ᾕ")
    , ("ἦ", "ᾖ")
    , ("ἧ", "ᾗ")
    , ("ὴ", "ῂ")
    , ("ή", "ῄ")
    , ("ῆ", "ῇ")
    , ("Ω", "ῼ")
    , ("Ὠ", "ᾨ")
    , ("Ὡ", "ᾩ")
    , ("Ὢ", "ᾪ")
    , ("Ὣ", "ᾫ")
    , ("Ὤ", "ᾬ")
    , ("Ὥ", "ᾭ")
    , ("Ὦ", "ᾮ")
    , ("Ὧ", "ᾯ")
    , ("ω", "ῳ")
    , ("ὠ", "ᾠ")
    , ("ὡ", "ᾡ")
    , ("ὢ", "ᾢ")
    , ("ὣ", "ᾣ")
    , ("ὤ", "ᾤ")
    , ("ὥ", "ᾥ")
    , ("ὦ", "ᾦ")
    , ("ὧ", "ᾧ")
    , ("ὼ", "ῲ")
    , ("ώ", "ῴ")
    , ("ῶ", "ῷ")
    ]
belowdot ∷ DeadKey' Char PresetDeadKey
belowdot = DeadKey "belowdot" (BaseChar '\x803') ∘ fst ∘ runWriter $ stringMapToActionMap "belowdot"
    [ ("A", "Ạ")
    , ("a", "ạ")
    , ("B", "Ḅ")
    , ("b", "ḅ")
    , ("D", "Ḍ")
    , ("d", "ḍ")
    , ("E", "Ẹ")
    , ("e", "ẹ")
    , ("H", "Ḥ")
    , ("h", "ḥ")
    , ("I", "Ị")
    , ("i", "ị")
    , ("K", "Ḳ")
    , ("k", "ḳ")
    , ("L", "Ḷ")
    , ("l", "ḷ")
    , ("M", "Ṃ")
    , ("m", "ṃ")
    , ("N", "Ṇ")
    , ("n", "ṇ")
    , ("O", "Ọ")
    , ("o", "ọ")
    , ("R", "Ṛ")
    , ("r", "ṛ")
    , ("S", "Ṣ")
    , ("s", "ṣ")
    , ("T", "Ṭ")
    , ("t", "ṭ")
    , ("U", "Ụ")
    , ("u", "ụ")
    , ("V", "Ṿ")
    , ("v", "ṿ")
    , ("W", "Ẉ")
    , ("w", "ẉ")
--    , ("X", "X̣")
--    , ("x", "x̣")
    , ("Y", "Ỵ")
    , ("y", "ỵ")
    , ("Z", "Ẓ")
    , ("z", "ẓ")
    ]
hook ∷ DeadKey' Char PresetDeadKey
hook = DeadKey "hook" (BaseChar '\x309') ∘ fst ∘ runWriter $ stringMapToActionMap "hook"
    [ ("A", "Ả")
    , ("a", "ả")
    , ("Ă", "Ẳ")
    , ("ă", "ẳ")
    , ("Â", "Ẩ")
    , ("â", "ẩ")
    , ("E", "Ẻ")
    , ("e", "ẻ")
    , ("Ê", "Ể")
    , ("ê", "ể")
    , ("I", "Ỉ")
    , ("i", "ỉ")
    , ("O", "Ỏ")
    , ("o", "ỏ")
    , ("Ô", "Ổ")
    , ("ô", "ổ")
    , ("Ơ", "Ở")
    , ("ơ", "ở")
    , ("U", "Ủ")
    , ("u", "ủ")
    , ("Ư", "Ử")
    , ("ư", "ử")
    , ("Y", "Ỷ")
    , ("y", "ỷ")
    ]
horn ∷ DeadKey' Char PresetDeadKey
horn = DeadKey "horn" (BaseChar '\x31B') ∘ fst ∘ runWriter $ stringMapToActionMap "horn"
    [ ("O", "Ơ")
    , ("o", "ơ")
    , ("U", "Ư")
    , ("u", "ư")
    ]
stroke ∷ DeadKey' Char PresetDeadKey
stroke = DeadKey "stroke" (BaseChar '/') ∘ fst ∘ runWriter $ stringMapToActionMap "stroke"
    [ ("O", "Ø")
    , ("o", "ø")
    , ("D", "Đ")
    , ("d", "đ")
    , ("H", "Ħ")
    , ("h", "ħ")
    , ("L", "Ł")
    , ("l", "ł")
    , ("T", "Ŧ")
    , ("t", "ŧ")
    , ("b", "ƀ")
    , ("I", "Ɨ")
    , ("z", "ƶ")
    , ("G", "Ǥ")
    , ("g", "ǥ")
    , ("Ó", "Ǿ")
    , ("ó", "ǿ")
    , ("i", "ɨ")
    , ("=", "≠")
    , ("A", "\x23A")
    , ("a", "\x2C65")
    , ("B", "\x243")
    , ("C", "\x23B")
    , ("c", "\x23C")
    , ("E", "\x246")
    , ("e", "\x247")
    , (">", "\x226F")
    , ("≥", "\x2271")
    , ("J", "\x248")
    , ("j", "\x249")
    , ("\x269", "\x1D7C")
    , ("\x237", "\x25F")
    , ("<", "\x226E")
    , ("≤", "\x2270")
    , ("P", "\x2C63")
    , ("p", "\x1D7D")
    , ("R", "\x24C")
    , ("r", "\x24D")
    , ("U", "\x244")
    , ("u", "\x289")
    , ("Y", "\x24E")
    , ("y", "\x24F")
    ]
abovecomma ∷ DeadKey' Char PresetDeadKey
abovecomma = DeadKey "abovecomma" (BaseChar '᾿') ∘ fst ∘ runWriter $ stringMapToActionMap "abovecomma"
    [ ("Α", "Ἀ")
    , ("Ά", "Ἄ")
    , ("Ὰ", "Ἂ")
--    , ("", "Ἆ")
    , ("ᾼ", "ᾈ")
--    , ("", "ᾌ")
--    , ("", "ᾊ")
--    , ("", "ᾎ")
    , ("α", "ἀ")
    , ("ά", "ἄ")
    , ("ὰ", "ἂ")
    , ("ᾶ", "ἆ")
    , ("ᾳ", "ᾀ")
    , ("ᾴ", "ᾄ")
    , ("ᾲ", "ᾂ")
    , ("ᾷ", "ᾆ")
    , ("Ε", "Ἐ")
    , ("Έ", "Ἔ")
    , ("Ὲ", "Ἒ")
    , ("ε", "ἐ")
    , ("έ", "ἔ")
    , ("ὲ", "ἒ")
    , ("Η", "Ἠ")
    , ("Ή", "Ἤ")
    , ("Ὴ", "Ἢ")
--    , ("", "Ἦ")
    , ("ῌ", "ᾘ")
--    , ("", "ᾜ")
--    , ("", "ᾚ")
--    , ("", "ᾞ")
    , ("η", "ἠ")
    , ("ή", "ἤ")
    , ("ὴ", "ἢ")
    , ("ῆ", "ἦ")
    , ("ῃ", "ᾐ")
    , ("ῄ", "ᾔ")
    , ("ῂ", "ᾒ")
    , ("ῇ", "ᾖ")
    , ("Ι", "Ἰ")
    , ("Ί", "Ἴ")
    , ("Ὶ", "Ἲ")
--    , ("", "Ἶ")
    , ("ι", "ἰ")
    , ("ί", "ἴ")
    , ("ὶ", "ἲ")
    , ("ῖ", "ἶ")
    , ("Ο", "Ὀ")
    , ("Ό", "Ὄ")
    , ("Ὸ", "Ὂ")
    , ("ο", "ὀ")
    , ("ό", "ὄ")
    , ("ὸ", "ὂ")
    , ("ν", "ὐ")
    , ("ύ", "ὔ")
    , ("ὺ", "ὒ")
    , ("ῦ", "ὖ")
    , ("Ω", "Ὠ")
    , ("Ώ", "Ὤ")
    , ("Ὼ", "Ὢ")
--    , ("", "Ὦ")
    , ("ῼ", "ᾨ")
--    , ("", "ᾬ")
--    , ("", "ᾪ")
--    , ("", "ᾮ")
    , ("ω", "ὠ")
    , ("ώ", "ὤ")
    , ("ὼ", "ὢ")
    , ("ῶ", "ὦ")
    , ("ῳ", "ᾠ")
    , ("ῴ", "ᾤ")
    , ("ῲ", "ᾢ")
    , ("ῷ", "ᾦ")
    , ("ρ", "ῤ")
    ]
abovereversedcomma ∷ DeadKey' Char PresetDeadKey
abovereversedcomma = DeadKey "abovereversedcomma" (BaseChar '῾') ∘ fst ∘ runWriter $ stringMapToActionMap "abovereversedcomma"
    [ ("Α", "Ἁ")
    , ("Ά", "Ἅ")
    , ("Ὰ", "Ἃ")
--    , ("", "Ἇ")
    , ("ᾼ", "ᾉ")
--    , ("", "ᾍ")
--    , ("", "ᾋ")
--    , ("", "ᾏ")
    , ("α", "ἁ")
    , ("ά", "ἅ")
    , ("ὰ", "ἃ")
    , ("ᾶ", "ἇ")
    , ("ᾳ", "ᾁ")
    , ("ᾴ", "ᾅ")
    , ("ᾲ", "ᾃ")
    , ("ᾷ", "ᾇ")
    , ("Ε", "Ἑ")
    , ("Έ", "Ἕ")
    , ("Ὲ", "Ἓ")
    , ("ε", "ἑ")
    , ("έ", "ἕ")
    , ("ὲ", "ἓ")
    , ("Η", "Ἡ")
    , ("Ή", "Ἥ")
    , ("Ὴ", "Ἣ")
--    , ("", "Ἧ")
    , ("ῌ", "ᾙ")
--    , ("", "ᾝ")
--    , ("", "ᾛ")
--    , ("", "ᾟ")
    , ("η", "ἡ")
    , ("ή", "ἥ")
    , ("ὴ", "ἣ")
    , ("ῆ", "ἧ")
    , ("ῃ", "ᾑ")
    , ("ῄ", "ᾕ")
    , ("ῂ", "ᾓ")
    , ("ῇ", "ᾗ")
    , ("Ι", "Ἱ")
    , ("Ί", "Ἵ")
    , ("Ὶ", "Ἳ")
--    , ("", "Ἷ")
    , ("ι", "ἱ")
    , ("ί", "ἵ")
    , ("ὶ", "ἳ")
    , ("ῖ", "ἷ")
    , ("Ο", "Ὁ")
    , ("Ό", "Ὅ")
    , ("Ὸ", "Ὃ")
    , ("ο", "ὁ")
    , ("ό", "ὅ")
    , ("ὸ", "ὃ")
    , ("ν", "ὑ")
    , ("ύ", "ὕ")
    , ("ὺ", "ὓ")
    , ("ῦ", "ὗ")
    , ("Ω", "Ὡ")
    , ("Ώ", "Ὥ")
    , ("Ὼ", "Ὣ")
--    , ("", "Ὧ")
    , ("ῼ", "ᾩ")
--    , ("", "ᾭ")
--    , ("", "ᾫ")
--    , ("", "ᾯ")
    , ("ω", "ὡ")
    , ("ώ", "ὥ")
    , ("ὼ", "ὣ")
    , ("ῶ", "ὧ")
    , ("ῳ", "ᾡ")
    , ("ῴ", "ᾥ")
    , ("ῲ", "ᾣ")
    , ("ῷ", "ᾧ")
    , ("ρ", "ῥ")
    ]
doublegrave ∷ DeadKey' Char PresetDeadKey
doublegrave = DeadKey "doublegrave" (BaseChar '˵') ∘ fst ∘ runWriter $ stringMapToActionMap "doublegrave"
    [ ("A", "Ȁ")
    , ("a", "ȁ")
    , ("E", "Ȅ")
    , ("e", "ȅ")
    , ("I", "Ȉ")
    , ("i", "ȉ")
    , ("O", "Ȍ")
    , ("o", "ȍ")
    , ("R", "Ȑ")
    , ("r", "ȑ")
    , ("U", "Ȕ")
    , ("u", "ȕ")
    ]
belowring ∷ DeadKey' Char PresetDeadKey
belowring = DeadKey "belowring" (BaseChar '˳') ∘ fst ∘ runWriter $ stringMapToActionMap "belowring"
    [ ("A", "Ḁ")
    , ("a", "ḁ")
    , ("|", "⫰")
    ]
belowmacron ∷ DeadKey' Char PresetDeadKey
belowmacron = DeadKey "belowmacron" (BaseChar 'ˍ') ∘ fst ∘ runWriter $ stringMapToActionMap "belowmacron"
    [ ("B", "Ḇ")
    , ("b", "ḇ")
    , ("D", "Ḏ")
    , ("d", "ḏ")
    , ("h", "ẖ")
    , ("K", "Ḵ")
    , ("k", "ḵ")
    , ("L", "Ḻ")
    , ("l", "ḻ")
    , ("N", "Ṉ")
    , ("n", "ṉ")
    , ("R", "Ṟ")
    , ("r", "ṟ")
    , ("T", "Ṯ")
    , ("t", "ṯ")
    , ("Z", "Ẕ")
    , ("z", "ẕ")
    ]
belowcircumflex ∷ DeadKey' Char PresetDeadKey
belowcircumflex = DeadKey "belowcircumflex" (BaseChar '\x032D') ∘ fst ∘ runWriter $ stringMapToActionMap "belowcircumflex"
    [ ("D", "Ḓ")
    , ("d", "ḓ")
    , ("E", "Ḙ")
    , ("e", "ḙ")
    , ("L", "Ḽ")
    , ("l", "ḽ")
    , ("N", "Ṋ")
    , ("n", "ṋ")
    , ("T", "Ṱ")
    , ("t", "ṱ")
    , ("U", "Ṷ")
    , ("u", "ṷ")
    ]
belowtilde ∷ DeadKey' Char PresetDeadKey
belowtilde = DeadKey "belowtilde" (BaseChar '\x0330') ∘ fst ∘ runWriter $ stringMapToActionMap "belowtilde"
    [ ("E", "Ḛ")
    , ("e", "ḛ")
    , ("I", "Ḭ")
    , ("i", "ḭ")
    , ("U", "Ṵ")
    , ("u", "ṵ")
    , ("+", "⨦")
    ]
belowbreve ∷ DeadKey' Char PresetDeadKey
belowbreve = DeadKey "belowbreve" (BaseChar '\x032E') ∘ fst ∘ runWriter $ stringMapToActionMap "belowbreve"
    [ ("H", "Ḫ")
    , ("h", "ḫ")
    ]
belowdiaeresis ∷ DeadKey' Char PresetDeadKey
belowdiaeresis = DeadKey "belowdiaeresis" (BaseChar '\x0324') ∘ fst ∘ runWriter $ stringMapToActionMap "belowdiaeresis"
    [ ("U", "Ṳ")
    , ("u", "ṳ")
    ]
invertedbreve ∷ DeadKey' Char PresetDeadKey
invertedbreve = DeadKey "invertedbreve" (BaseChar '\x0311') ∘ fst ∘ runWriter $ stringMapToActionMap "invertedbreve"
    [ ("A", "Ȃ")
    , ("a", "ȃ")
    , ("E", "Ȇ")
    , ("e", "ȇ")
    , ("I", "Ȋ")
    , ("i", "ȋ")
    , ("O", "Ȏ")
    , ("o", "ȏ")
    , ("R", "Ȓ")
    , ("r", "ȓ")
    , ("U", "Ȗ")
    , ("u", "ȗ")
    ]
belowcomma ∷ DeadKey' Char PresetDeadKey
belowcomma = DeadKey "belowcomma" (BaseChar ',') ∘ fst ∘ runWriter $ stringMapToActionMap "belowcomma"
    [ ("S", "Ș")
    , ("s", "ș")
    , ("T", "Ț")
    , ("t", "ț")
    ]
currency ∷ DeadKey' Char PresetDeadKey
currency = DeadKey "currency" (BaseChar '¤') ∘ fst ∘ runWriter $ stringMapToActionMap "currency"
    [ ("A", "₳")
    , ("a", "؋")
    , ("B", "₱")
    , ("b", "฿")
    , ("Ç", "₵")
    , ("C", "₡")
    , ("ç", "₵")
    , ("c", "¢")
    , ("D", "₯")
    , ("d", "₫")
    , ("E", "₠")
    , ("e", "€")
    , ("F", "₣")
    , ("f", "ƒ")
    , ("G", "₲")
    , ("g", "₲")
    , ("H", "₴")
    , ("h", "₴")
    , ("I", "៛")
    , ("i", "﷼")
    , ("K", "₭")
    , ("k", "₭")
    , ("L", "₤")
    , ("l", "£")
    , ("M", "ℳ")
    , ("m", "₥")
    , ("N", "₦")
    , ("n", "₦")
    , ("O", "૱")
    , ("o", "௹")
    , ("P", "₧")
    , ("p", "₰")
    , ("r", "₢")
    , ("R", "₨")
    , ("S", "$")
    , ("s", "₪")
    , ("T", "₮")
    , ("t", "৳")
    , ("Þ", "৲")
    , ("þ", "৲")
    , ("U", "圓")
    , ("u", "元")
    , ("W", "₩")
    , ("w", "₩")
    , ("Y", "円")
    , ("y", "¥")
    ]
greek ∷ DeadKey' Char PresetDeadKey
greek = DeadKey "greek" BaseNo ∘ fst ∘ runWriter $ stringMapToActionMap "greek"
    [ ("A", "Α")
    , ("a", "α")
    , ("B", "Β")
    , ("b", "β")
    , ("D", "Δ")
    , ("d", "δ")
    , ("E", "Ε")
    , ("e", "ε")
    , ("F", "Φ")
    , ("f", "φ")
    , ("G", "Γ")
    , ("g", "γ")
    , ("H", "Η")
    , ("h", "η")
    , ("I", "Ι")
    , ("i", "ι")
    , ("J", "Θ")
    , ("j", "θ")
    , ("K", "Κ")
    , ("k", "κ")
    , ("L", "Λ")
    , ("l", "λ")
    , ("M", "Μ")
    , ("m", "μ")
    , ("N", "Ν")
    , ("n", "ν")
    , ("O", "Ο")
    , ("o", "ο")
    , ("P", "Π")
    , ("p", "π")
    , ("Q", "Χ")
    , ("q", "χ")
    , ("R", "Ρ")
    , ("r", "ρ")
    , ("S", "Σ")
    , ("s", "σ")
    , ("T", "Τ")
    , ("t", "τ")
    , ("U", "Υ")
    , ("u", "υ")
    , ("W", "Ω")
    , ("w", "ω")
    , ("X", "Ξ")
    , ("x", "ξ")
    , ("Y", "Ψ")
    , ("y", "ψ")
    , ("Z", "Ζ")
    , ("z", "ζ")
    ]
